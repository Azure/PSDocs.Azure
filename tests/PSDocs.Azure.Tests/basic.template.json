{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "sku": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "metadata": {
                "description": "Optional. Create the Storage Account as LRS or GRS."
            }
        },
        "suffixLength": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 13
        },
        "containers": {
            "type": "array",
            "defaultValue": [
            ]
        },
        "lifecycleRules": {
            "type": "array",
            "defaultValue": [
            ]
        },
        "blobSoftDeleteDays": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 365
        },
        "containerSoftDeleteDays": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 365
        },
        "shares": {
            "type": "array",
            "defaultValue": [
            ]
        },
        "useLargeFileShares": {
            "type": "bool",
            "defaultValue": false
        },
        "shareSoftDeleteDays": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 365
        },
        "allowBlobPublicAccess": {
            "type": "bool",
            "defaultValue": false
        },
        "keyVaultPrincipalId": {
            "type": "string",
            "defaultValue": ""
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(parameters('storageAccountName'), if(greater(parameters('suffixLength'), 0), substring(uniqueString(resourceGroup().id), 0, parameters('suffixLength')), ''))]",
        "blobSoftDeleteLookup": {
            "true": {
                "enabled": true,
                "days": "[parameters('blobSoftDeleteDays')]"
            },
            "false": {
                "enabled": false
            }
        },
        "containerSoftDeleteLookup": {
            "true": {
                "enabled": true,
                "days": "[parameters('containerSoftDeleteDays')]"
            },
            "false": null
        },
        "shareSoftDeleteLookup": {
            "true": {
                "enabled": true,
                "days": "[parameters('shareSoftDeleteDays')]"
            },
            "false": {
                "enabled": false
            }
        },
        "largeFileSharesState": "[if(parameters('useLargeFileShares'), 'Enabled', 'Disabled')]",
        "storageAccountKeyOperatorRoleId": "[resourceId('Microsoft.Authorization/roleDefinitions', '81a9662b-bebf-436f-a333-f67b29880f12')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot",
                "largeFileSharesState": "[variables('largeFileSharesState')]",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "minimumTlsVersion": "TLS1_2"
            },
            "tags": "[parameters('tags')]",
            "resources": [
                {
                    "type": "Microsoft.Storage/storageAccounts/blobServices",
                    "apiVersion": "2019-06-01",
                    "name": "[concat(variables('storageAccountName'), '/default')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "sku": {
                        "name": "[parameters('sku')]"
                    },
                    "properties": {
                        "cors": {
                            "corsRules": [
                            ]
                        },
                        "deleteRetentionPolicy": "[variables('blobSoftDeleteLookup')[string(greater(parameters('blobSoftDeleteDays'), 0))]]",
                        "containerDeleteRetentionPolicy": "[variables('containerSoftDeleteLookup')[string(greater(parameters('containerSoftDeleteDays'), 0))]]"
                    }
                },
                {
                    "type": "Microsoft.Storage/storageAccounts/fileServices",
                    "apiVersion": "2019-06-01",
                    "name": "[concat(variables('storageAccountName'), '/default')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "sku": {
                        "name": "[parameters('sku')]"
                    },
                    "properties": {
                        "shareDeleteRetentionPolicy": "[variables('shareSoftDeleteLookup')[string(greater(parameters('shareSoftDeleteDays'), 0))]]"
                    }
                }
            ]
        },
        {
            "condition": "[not(equals(length(parameters('containers')), 0))]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[if(equals(length(parameters('containers')), 0), concat(variables('storageAccountName'), '/default/empty'), concat(variables('storageAccountName'), '/default/', parameters('containers')[copyIndex('containerIndex')].name))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "copy": {
                "mode": "Parallel",
                "count": "[if(equals(length(parameters('containers')), 0), 1, length(parameters('containers')))]",
                "name": "containerIndex"
            },
            "properties": {
                "metadata": "[parameters('containers')[copyIndex('containerIndex')].metadata]",
                "publicAccess": "[parameters('containers')[copyIndex('containerIndex')].publicAccess]"
            }
        },
        {
            "condition": "[not(empty(parameters('lifecycleRules')))]",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/managementPolicies",
            "apiVersion": "2019-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "policy": {
                    "rules": "[parameters('lifecycleRules')]"
                }
            }
        },
        {
            "condition": "[not(equals(length(parameters('shares')), 0))]",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[if(equals(length(parameters('shares')), 0), concat(variables('storageAccountName'), '/default/empty'), concat(variables('storageAccountName'), '/default/', parameters('shares')[copyIndex('shareIndex')].name))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "copy": {
                "mode": "Parallel",
                "count": "[if(equals(length(parameters('shares')), 0), 1, length(parameters('shares')))]",
                "name": "shareIndex"
            },
            "properties": {
                "metadata": "[parameters('shares')[copyIndex('shareIndex')].metadata]",
                "shareQuota": "[parameters('shares')[copyIndex('shareIndex')].shareQuota]"
            }
        },
        {
            "condition": "[not(empty(parameters('keyVaultPrincipalId')))]",
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid(parameters('keyVaultPrincipalId'), variables('storageAccountKeyOperatorRoleId')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('storageAccountKeyOperatorRoleId')]",
                "principalId": "[parameters('keyVaultPrincipalId')]",
                "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "principalType": "ServicePrincipal"
            }
        }
    ],
    "outputs": {
        "blobEndpoint": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').primaryEndpoints.blob]"
        },
        "resourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        }
    }
}
